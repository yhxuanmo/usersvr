swagger: "2.0"
info:
  title: User Service
  description: HTTP service for managing user info
  version: ""
host: localhost:8000
consumes:
- application/json
- application/xml
- application/gob
produces:
- application/json
- application/xml
- application/gob
paths:
  /user:
    get:
      tags:
      - userMethod
      summary: show userMethod
      description: Show user info
      operationId: userMethod#show
      parameters:
      - name: view
        in: query
        description: View to render
        required: false
        type: string
        enum:
        - default
        - tiny
      - name: Authorization
        in: header
        description: JWT used for authentication
        required: true
        type: string
      responses:
        "200":
          description: OK response.
          schema:
            $ref: '#/definitions/UserMethodShowResponseBody'
        "404":
          description: Not Found response.
          schema:
            $ref: '#/definitions/UserMethodShowNotFoundResponseBody'
            required:
            - message
            - id
      schemes:
      - http
      security:
      - jwt_header_Authorization: []
  /user/change/email:
    post:
      tags:
      - userMethod
      summary: changeEmail userMethod
      description: Add n number of bottles and return their IDs. This is a multipart
        request and each part has field name 'bottle' and contains the encoded bottle
        info to be added.
      operationId: userMethod#changeEmail
      parameters:
      - name: ChangeEmailRequestBody
        in: body
        required: true
        schema:
          $ref: '#/definitions/UserMethodChangeEmailRequestBody'
          required:
          - email
      responses:
        "200":
          description: OK response.
          schema:
            type: string
      schemes:
      - http
  /user/change/info:
    post:
      tags:
      - userMethod
      summary: changeInfo userMethod
      description: Add new bottle and return its ID.
      operationId: userMethod#changeInfo
      parameters:
      - name: ChangeInfoRequestBody
        in: body
        required: true
        schema:
          $ref: '#/definitions/UserMethodChangeInfoRequestBody'
          required:
          - name
          - email
          - icon
      responses:
        "200":
          description: OK response.
          schema:
            type: string
      schemes:
      - http
  /user/change/password:
    post:
      tags:
      - userMethod
      summary: changePassword userMethod
      description: Remove bottle from storage
      operationId: userMethod#changePassword
      parameters:
      - name: ChangePasswordRequestBody
        in: body
        required: true
        schema:
          $ref: '#/definitions/UserMethodChangePasswordRequestBody'
          required:
          - oldPassword
      responses:
        "200":
          description: OK response.
      schemes:
      - http
  /user/forgot/password:
    post:
      tags:
      - userMethod
      summary: forgotPassword userMethod
      description: Rate bottles by IDs
      operationId: userMethod#forgotPassword
      parameters:
      - name: ForgotPasswordRequestBody
        in: body
        required: true
        schema:
          $ref: '#/definitions/UserMethodForgotPasswordRequestBody'
          required:
          - code
      responses:
        "200":
          description: OK response.
      schemes:
      - http
  /user/login:
    post:
      tags:
      - userMethod
      summary: login userMethod
      description: Creates a valid JWT
      operationId: userMethod#login
      parameters:
      - name: LoginRequestBody
        in: body
        required: true
        schema:
          $ref: '#/definitions/UserMethodLoginRequestBody'
          required:
          - email
          - password
      responses:
        "200":
          description: OK response.
          schema:
            $ref: '#/definitions/UserMethodLoginResponseBody'
            required:
            - jwt
      schemes:
      - http
  /user/register:
    post:
      tags:
      - userMethod
      summary: register userMethod
      description: register user
      operationId: userMethod#register
      parameters:
      - name: RegisterRequestBody
        in: body
        required: true
        schema:
          $ref: '#/definitions/UserMethodRegisterRequestBody'
          required:
          - email
          - password
      responses:
        "200":
          description: OK response.
          schema:
            $ref: '#/definitions/UserMethodRegisterResponseBody'
            required:
            - code
      schemes:
      - http
definitions:
  UserMethodChangeEmailRequestBody:
    title: UserMethodChangeEmailRequestBody
    type: object
    properties:
      email:
        type: string
        example: Eligendi qui.
    example:
      email: At voluptate molestiae.
    required:
    - email
  UserMethodChangeInfoRequestBody:
    title: UserMethodChangeInfoRequestBody
    type: object
    properties:
      email:
        type: string
        description: Vintage of bottle
        example: 9gk
        maxLength: 100
      icon:
        type: string
        description: Description of bottle
        example: Red wine blend with an emphasis on the Cabernet Franc grape and including
          other Bordeaux grape varietals and some Syrah
        maxLength: 2000
      name:
        type: string
        description: Name of bottle
        example: Blue's Cuvee
        maxLength: 100
    example:
      email: 5pb
      icon: Red wine blend with an emphasis on the Cabernet Franc grape and including
        other Bordeaux grape varietals and some Syrah
      name: Blue's Cuvee
    required:
    - name
    - email
    - icon
  UserMethodChangePasswordRequestBody:
    title: UserMethodChangePasswordRequestBody
    type: object
    properties:
      oldPassword:
        type: string
        description: old password
        example: old password
    example:
      oldPassword: old password
    required:
    - oldPassword
  UserMethodForgotPasswordRequestBody:
    title: UserMethodForgotPasswordRequestBody
    type: object
    properties:
      code:
        type: string
        example: "1234"
    example:
      code: "1234"
    required:
    - code
  UserMethodLoginRequestBody:
    title: UserMethodLoginRequestBody
    type: object
    properties:
      email:
        type: string
        description: Username used to perform signin
        example: 123@email.com
      password:
        type: string
        description: Password used to perform signin
        example: password
    description: Credentials used to authenticate to retrieve JWT token
    example:
      email: 123@email.com
      password: password
    required:
    - email
    - password
  UserMethodLoginResponseBody:
    title: UserMethodLoginResponseBody
    type: object
    properties:
      jwt:
        type: string
        description: JWT token
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
    example:
      jwt: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
    required:
    - jwt
  UserMethodRegisterRequestBody:
    title: UserMethodRegisterRequestBody
    type: object
    properties:
      email:
        type: string
        description: email used to perform login
        example: 123@email.com
      password:
        type: string
        description: Password used to perform signin
        example: password
    example:
      email: 123@email.com
      password: password
    required:
    - email
    - password
  UserMethodRegisterResponseBody:
    title: UserMethodRegisterResponseBody
    type: object
    properties:
      code:
        type: integer
        description: code
        example: 200
        format: int64
      data:
        type: object
        example:
          Qui dolor.: Quia cumque doloremque.
          Qui voluptate consequatur.: Aliquid nemo sit architecto quo sequi.
        additionalProperties: true
      message:
        type: string
        description: message
        example: bad request
    example:
      code: 200
      data:
        Ab quibusdam.: Excepturi doloremque sapiente reprehenderit itaque.
        Nostrum ipsam dolores.: Hic rerum placeat quia dolore illo.
        Voluptas sapiente ratione hic sunt minus optio.: Natus dignissimos sunt.
      message: bad request
    required:
    - code
  UserMethodShowNotFoundResponseBody:
    title: UserMethodShowNotFoundResponseBody
    type: object
    properties:
      id:
        type: string
        description: ID of missing user
        example: Quod quia eum.
      message:
        type: string
        description: Message of error
        example: user 1 not found
    description: Bottle not found
    example:
      id: Quasi quia nihil.
      message: user 1 not found
    required:
    - message
    - id
  UserMethodShowResponseBody:
    title: 'Mediatype identifier: application/vnd.cellar.stored-bottle; view=default'
    type: object
    properties:
      email:
        type: string
        description: Vintage of bottle
        example: f91
        maxLength: 100
      icon:
        type: string
        description: Description of bottle
        example: Red wine blend with an emphasis on the Cabernet Franc grape and including
          other Bordeaux grape varietals and some Syrah
        maxLength: 2000
      id:
        type: integer
        description: ID is the unique id of the bottle.
        example: 1
        format: int64
      name:
        type: string
        description: Name of bottle
        example: Blue's Cuvee
        maxLength: 100
    description: ShowResponseBody result type (default view)
    example:
      email: k8w
      icon: Red wine blend with an emphasis on the Cabernet Franc grape and including
        other Bordeaux grape varietals and some Syrah
      id: 1
      name: Blue's Cuvee
    required:
    - id
    - name
    - icon
    - email
securityDefinitions:
  jwt_header_Authorization:
    type: apiKey
    description: Secures endpoint by requiring a valid JWT token retrieved via the
      signin endpoint. Supports scopes "api:read" and "api:write".
    name: Authorization
    in: header
